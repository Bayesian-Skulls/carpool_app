{"version":3,"sources":["app.js","errors/404/error-404-controller.js","js/dashboard/dashboard.js","js/dashboard/schedule.js","js/directive/address-form.js","js/directive/pickadate-directive.js","js/home/home.js","js/nav/nav.js","js/register/register.js","js/utils/ajax-service.js","js/utils/string-util.js","js/register/models/date.js","js/register/models/schedule.js","js/register/models/user.js","js/register/models/vehicle.js","js/register/models/work.js","js/register/services/current.js","js/register/services/user-service.js","js/register/services/work-service.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["// Declare our app module, and import the ngRoute and ngAnimate\n// modules into it.\nvar app = angular.module('app', ['ngRoute', 'ngAnimate',]);\n\n// Set up our 404 handler\napp.config(['$routeProvider', function ($routeProvider) {\n  $routeProvider.otherwise({\n    controller: 'Error404Ctrl',\n    controllerAs: 'vm',\n    templateUrl: 'static/errors/404/error-404.html'\n  });\n}]);\n","app.controller('Error404Ctrl', ['$location', function ($location) {\n  this.message = 'Could not find: ' + $location.url();\n}]);\n","app.config(['$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {\n  var routeOptions = {\n    templateUrl: '/static/js/dashboard/dashboard.html',\n    controller: 'dashCtrl',\n    controllerAs: 'vm'\n  };\n  $routeProvider.when('/dashboard', routeOptions);\n\n}]).controller('dashCtrl', ['$log', '$location', 'current', 'userService',\n      function($log, $location, current, userService){\n\n  var self = this;\n  self.current = current;\n\n}]);\n","app.factory('Schedule', [function(){\n\n  return function (spec) {\n    spec = spec || {};\n    return {\n      name: spec.name || '',\n      email: spec.email || '',\n      paypal: spec.paypal || '',\n      id: spec.id || '',\n      address: spec.address || '',\n      street_number: spec.street_number || '',\n      street: spec.street || '',\n      city: spec.city || '',\n      state: spec.state || '',\n      zip: spec.zip || '',\n      lat: spec.lat || '',\n      long: spec.long || ''\n    };\n  };\n}]);\n","app.directive('googleplace', function() {\n    return {\n        require: 'ngModel',\n        scope: {\n            ngModel: '=',\n            details: '=?'\n        },\n        link: function(scope, element, attrs, model) {\n            var options = {\n                types: [],\n                componentRestrictions: {}\n            };\n            scope.gPlace = new google.maps.places.Autocomplete(element[0], options);\n\n            google.maps.event.addListener(scope.gPlace, 'place_changed', function() {\n                scope.$apply(function() {\n                    var addressObj = scope.gPlace.getPlace();\n                    model.$setViewValue(element.val());\n                    scope.details.city = addressObj.address_components[2].long_name;\n                    scope.details.state = addressObj.address_components[5].long_name;\n                    scope.details.street_number = addressObj.address_components[0].long_name;\n                    scope.details.street = addressObj.address_components[1].long_name;\n                    scope.details.zip_code = addressObj.address_components[7].long_name;\n                    scope.details.lat = addressObj.geometry.location.k;\n                    scope.details.long = addressObj.geometry.location.D;\n                });\n            });\n        }\n    };\n});\n","app.directive('picker', function() {\n  return {\n      require: 'ngModel',\n      scope: {\n          ngModel: '=',\n          pickerType: '=?',\n          details: '=?'\n      },\n      link: function(scope, element, attrs, model) {\n        if(scope.pickerType==='date'){\n          $(element).pickadate({\n            formatSubmit: 'yyyy/mm/dd'\n          });\n        } else if (scope.pickerType==='time') {\n          $(element[0]).pickatime();\n        }\n      }\n  };\n  // {{vm.user.schedule.slice(0,5).trim()}}\n});\n","app.config(['$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {\n  var routeOptions = {\n    templateUrl: '/static/js/home/home.html',\n    controller: 'HomeCtrl',\n    controllerAs: 'vm'\n  };\n  $routeProvider.when('/', routeOptions);\n\n}]).controller('HomeCtrl', ['$log', '$location', 'current', 'Work', function($log, $location, current, Work){\n  var self = this;\n\n  self.current = current;\n  self.newWork = Work();\n\n  self.register = function() {\n    self.current.work = self.newWork;\n    $location.path('/facebook/login');\n  };\n}]);\n","app.directive('mainNav', function() {\n\n  return {\n\n    replace: true,\n\n    scope: {\n      onclose: '='\n    },\n\n    templateUrl: '/static/js/nav/main-nav.html',\n\n    controller: ['$location', 'StringUtil', '$log', 'current', '$scope', '$rootScope',\n    function($location, StringUtil, $log, current, $scope, $rootScope) {\n      var self = this;\n      self.current = current;\n\n      self.isActive = function (path) {\n\n        if (path === '/') {\n          return $location.path() === '/';\n        }\n        return StringUtil.startsWith($location.path(), path);\n      };\n\n\n      self.goTo = function(elem) {\n        $location.hash(elem);\n        $anchorScroll();s\n      };\n\n    }],\n\n    controllerAs: 'vm',\n\n    link: function ($scope, element, attrs, ctrl) {\n\n      $(document).ready(function(){\n        $('.js-menu-trigger, .js-menu-screen').on('click touchstart', function (e) {\n          $('.js-menu,.js-menu-screen').toggleClass('is-visible');\n          e.preventDefault();\n        });\n      });\n\n    }\n  };\n\n\n\n});\n","app.config(['$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {\n  var routeOptions = {\n    templateUrl: '/static/js/register/register.html',\n    controller: 'registerCtrl',\n    controllerAs: 'vm'\n  };\n  $routeProvider.when('/register', routeOptions);\n\n}]).controller('registerCtrl', ['$log', '$location', 'current', 'Work', 'Schedule', 'userService', 'workService',\n                        function($log, $location, current, Work, Schedule, userService, workService){\n\n  var self = this;\n  self.current = current;\n  self.newWork = Work();\n  self.schedule = Schedule();\n\n  self.editUser = function() {\n    userService.editUser(self.current.user);\n  };\n\n  self.addWork = function() {\n    workService.addWork(self.newWork, current.user).then(function(data) {\n      console.log(data);\n    });\n  };\n\n  self.signup = function() {\n    userService.addUser().then(function() {\n\n    });\n  };\n\n  self.fbRegister = function() {\n    $location.path('/facebook/login');\n  };\n\n}]);\n","app.factory('ajaxService', ['$log', function($log) {\n\n  return {\n    call: function(p) {\n      return p.then(function (result) {\n        return result;\n      })\n      .catch(function (error) {\n        $log.log(error);\n      });\n    }\n  };\n\n}]);\n","// A little string utility... no biggie\napp.factory('StringUtil', function() {\n  return {\n    startsWith: function (str, subStr) {\n      str = str || '';\n      return str.slice(0, subStr.length) === subStr;\n    }\n  };\n});\n","app.factory('workDate', [function(){\n\n  return function (spec) {\n    spec = spec || {};\n    return {\n      user_id: spec.user_id || undefined,\n      work_id: spec.work_id || undefined,\n      arrival_datetime: spec.arrival_datetime || undefined,\n      departure_datetime: spec.departure_datetime || undefined\n    };\n  };\n}]);\n","app.factory('Schedule', ['workDate','$log', function(workDate, $log){\n\n  return function (spec) {\n    spec = spec || {};\n    var today = new Date();\n    var dateOffset = 7 - today.getDay();\n    var week = [];\n    var weekdays = ['mon', 'tues', 'wed', 'thurs', 'fri', 'sat', 'sun'];\n    weekdays.forEach(function(day, index) {\n      var weekDate = today.getDate() + dateOffset + index;\n      var isoDate = new Date();\n      isoDate.setDate(weekDate);\n      week.push(workDate());\n      week[index].day = day;\n      week[index].iso = isoDate.toISOString();\n    });\n    return week;\n  };\n}]);\n","app.factory('User', [function(){\n\n  return function (spec) {\n    spec = spec || {};\n    return {\n      name: spec.name || '',\n      email: spec.email || '',\n      paypal_id: spec.paypal || '',\n      id: spec.id || '',\n      address: spec.address || '',\n      street_number: spec.street_number || '',\n      street: spec.street || '',\n      city: spec.city || '',\n      state: spec.state || '',\n      zip_code: spec.zip || '',\n      lat: spec.lat || '',\n      long: spec.long || ''\n    };\n  };\n}]);\n","app.factory('Vehicle', [function(){\n\n  return function (spec) {\n    spec = spec || {};\n    return {\n      id: spec.id || '',\n      make: spec.make || '',\n      model: spec.model || '',\n      year: spec.year || ''\n    };\n  };\n}]);\n","app.factory('Work', [function(){\n\n  return function (spec) {\n    spec = spec || {};\n    return {\n      name: spec.name || '',\n      user_id: spec.user_id || '',\n      street_address: spec.street_address || '',\n      street_number: spec.street_number || '',\n      street: spec.street || '',\n      city: spec.city || '',\n      state: spec.state || '',\n      zip: spec.zip || undefined,\n      lat: spec.lat || '',\n      long: spec.long || ''\n    };\n  };\n\n}]);\n","app.factory('current', ['User', 'userService','$log', function(User, userService, $log) {\n  // create basic object\n  var currentSpec = {};\n\n  currentSpec.user = User();\n  userService.getCurrent().then(function(result) {\n    if (result.status === 200){\n      $log.log('logged in');\n      $log.log(result.data.user);\n      currentSpec.user = result.data.user;\n      currentSpec.user.address = result.data.user.street_number + ' ' + result.data.user.street + ' ' + result.data.user.city + ' ' + result.data.user.state + ' ' + result.data.user.zip_code;\n    } else {\n      $log.log('sorry bra, no user');\n    }\n  });\n\n  return currentSpec;\n\n}]);\n","app.factory('userService', ['ajaxService', '$http', function(ajaxService, $http) {\n\n  return {\n\n    addUser: function(user) {\n        return ajaxService.call($http.post('/api/v1/user', user));\n    },\n\n    editUser: function(user) {\n      return ajaxService.call($http.put('/api/v1/user', user));\n    },\n\n    getCurrent: function() {\n      return ajaxService.call($http.get('/api/v1/me'));\n    }\n\n  };\n\n\n\n}]);\n","app.factory('workService', ['ajaxService', '$http', function(ajaxService, $http) {\n\n  return {\n\n    addWork: function(work, user) {\n        return ajaxService.call($http.post('/api/v1/users/' + user.id + '/work', work));\n    },\n    editWork: function(work, userId) {\n        return ajaxService.call($http.put('/api/v1/user/' + userId, work));\n    }\n  };\n\n}]);\n"],"sourceRoot":"/source/"}