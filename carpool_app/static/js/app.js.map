{"version":3,"sources":["app.js","errors/404/error-404-controller.js","js/dashboard/dashboard.js","js/directive/gauge-chart.js","js/directive/googleplace.js","js/directive/maps.js","js/directive/mileage-chart.js","js/directive/picker.js","js/home/home.js","js/nav/footer-nav.js","js/nav/nav.js","js/profile/profile.js","js/register/register.js","js/rideshare/rideshare.js","js/utils/ajax-service.js","js/utils/string-util.js","js/dashboard/services/encouragement-service.js","js/register/models/date.js","js/register/models/schedule.js","js/register/models/user.js","js/register/models/vehicle.js","js/register/models/work.js","js/register/services/current.js","js/register/services/schedule-service.js","js/register/services/user-service.js","js/register/services/vehicle-service.js","js/register/services/work-service.js","js/rideshare/service/rideshare-service.js"],"names":["app","angular","module","config","$routeProvider","otherwise","controller","controllerAs","templateUrl","$location","this","message","url","routeOptions","when","$log","current","workDate","userService","workService","vehicleService","scheduleService","rideShareService","encouragementService","$anchorScroll","$timeout","self","loading","weekdays","name","$locaton","path","schedule","cost","getRideShares","then","result","rideShare","getUserPhoto","rideo","info","facebook_id","photo","data","getSingleCost","rideShareResponse","response","you","accepted","respond","process","editProfile","hash","submitted","edit","editUser","user","log","addVehicle","vehicles","addWork","work","deleteWork","workItem","index","splice","getSchedule","addDate","arriveDate","Date","utc_date","toDateString","departDate","setHours","Math","floor","arrival_datetime","departure_datetime","newDate","user_id","id","work_id","toISOString","push","calendar","deleteDate","dateItem","deleteVehicle","carItem","getStat","stat","fixError","console","errorURL","directive","replace","scope","$scope","showHide","link","element","attrs","ctrl","setData","chartData","half_cost","toggleChartData","setTimeout","dataIndex","length","chart","load","columns","$apply","c3","generate","bindto","querySelector","type","gauge","label","format","value","round","min","max","unites","tooltip","show","color","pattern","threshold","unit","values","require","ngModel","details","model","options","types","componentRestrictions","gPlace","google","maps","places","Autocomplete","addressValues","street_number","route","locality","administrative_area_level_1","postal_code","event","addListener","addressObj","getPlace","$setViewValue","val","address_components","forEach","address_comp","add_field","long_name","latitude","geometry","location","k","longitude","D","MQA","withModule","map","addRoute","request","locations","latLng","lat","driver","lng","passenger","elt","zoom","mtype","bestFitMargin","zoomOnDoubleClick","TileMap","getCost","showLevel","halfCost","pickerType","$","pickadate","formatSubmit","onSet","submit","select","disable","from","to","pickatime","time","Work","page","newWork","register","showInfo","animate","scrollTop","offset","top","onclose","StringUtil","$rootScope","logout","$on","isActive","startsWith","goTo","elem","document","ready","on","e","toggleClass","preventDefault","editWork","editVehicle","Schedule","Vehicle","vehicle","addWorkFields","addSchedule","address","results","scheduleToSubmit","addDates","getStatus","signup","addUser","fbRegister","factory","call","p","error","str","subStr","slice","ajaxService","$http","$q","stats","get","statIndex","random","resolve","spec","undefined","today","dateOffset","getDay","week","fromIndex","indexOf","toIndex","day","weekDate","getDate","setUTCDate","depart_time","arrive_time","email","paypal_id","paypal","street","city","state","zip_code","zip","make","year","User","currentSpec","getWork","incomplete","errorMsg","getVehicles","calendars","processDates","rideShares","all","getCurrent","status","getPhoto","date","post","dates","editDate","put","arrive","depart","facebookID","car","userId","carpool","res","carpool_id","role","isConfirmed","person"],"mappings":"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","file":"app.js","sourcesContent":["// Declare our app module, and import the ngRoute and ngAnimate\n// modules into it.\nvar app = angular.module('app', ['ngRoute', 'ngAnimate',]);\n\n// Set up our 404 handler\napp.config(['$routeProvider', function ($routeProvider) {\n  $routeProvider.otherwise({\n    controller: 'Error404Ctrl',\n    controllerAs: 'vm',\n    templateUrl: 'static/errors/404/error-404.html'\n  });\n}]);\n","app.controller('Error404Ctrl', ['$location', function ($location) {\n  this.message = 'Could not find: ' + $location.url();\n}]);\n","app.config(['$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {\n  var routeOptions = {\n    templateUrl: '/static/js/dashboard/dashboard.html',\n    controller: 'dashCtrl',\n    controllerAs: 'vm'\n  };\n  $routeProvider.when('/dashboard', routeOptions);\n\n}]).controller('dashCtrl', ['$log', '$location', 'current', 'workDate', 'userService', 'workService', 'vehicleService', 'scheduleService', 'rideShareService', 'encouragementService', '$anchorScroll', '$timeout',\n      function($log, $location, current, workDate, userService, workService, vehicleService, scheduleService, rideShareService, encouragementService, $anchorScroll, $timeout){\n\n  var self = this;\n  self.current = current;\n  self.loading = current.loading;\n  self.weekdays = ['mon', 'tues', 'wed', 'thurs', 'fri', 'sat', 'sun'];\n  if (current.name) {\n    $locaton.path('/');\n  }\n  self.schedule = workDate();\n  self.cost = {};\n\n  self.loading= false;\n  self.getRideShares = function() {\n    rideShareService.getRideShares().then(function(result) {\n      self.rideShare = result;\n      userService.getUserPhoto(self.rideShare.rideo.info.facebook_id).then(function(result){\n          self.rideShare.rideo.photo = result.data;\n      });\n    });\n    rideShareService.getSingleCost().then(function(result) {\n      self.cost = result.data;\n    });\n  };\n  self.getRideShares();\n\n\n  self.rideShareResponse = function() {\n    var response = {\n      response: self.rideShare.you.accepted\n    };\n    rideShareService.respond(response).then(function(data) {\n      rideShareService.process().then(function(data){\n        self.rideShare = data;\n      });\n    });\n  };\n\n  self.editProfile = function() {\n    $location.hash('profile');\n    $anchorScroll();\n  };\n\n  // quick conditional for the submissions form\n  self.submitted = false;\n\n  self.edit = function() {\n    userService.editUser(self.current.user).then(function(result) {\n      $log.log(result);\n    });\n    //\n    vehicleService.addVehicle(self.current.vehicles[0]).then(function(result) {\n      $log.log(result);\n    });\n\n    workService.addWork(self.current.work[0], current.user).then(function(result) {\n      $log.log(result);\n      // self.current.work[0] = result.data.work;\n    });\n    self.submitted = true;\n    $timeout(function() {\n      self.submitted = false;\n\n    }, 3000);\n  };\n\n  self.deleteWork = function(workItem, index) {\n    // IMPLEMENT 'are you sure?' if there are dates associated with this job\n    workService.deleteWork(workItem).then(function(result) {\n      if (result) {\n        self.current.work.splice(index, 1);\n      }\n      current.getSchedule();\n    });\n  };\n  self.addDate = function() {\n    $timeout(function() {\n      var arriveDate = new Date(self.schedule.utc_date.toDateString());\n      var departDate = new Date(self.schedule.utc_date.toDateString());\n      arriveDate.setHours(Math.floor(self.schedule.arrival_datetime / 60), self.schedule.arrival_datetime % 60, 0, 0);\n      departDate.setHours(Math.floor(self.schedule.departure_datetime / 60), self.schedule.departure_datetime % 60, 0, 0);\n      var newDate = {\n        user_id: self.current.user.id,\n        work_id: self.current.work[0].id,\n        arrival_datetime: arriveDate.toISOString(),\n        departure_datetime: departDate.toISOString()\n      };\n      scheduleService.addDate(newDate).then(function(result) {\n        self.current.schedule.push(result.data.calendar);\n      });\n      self.schedule = workDate();\n    });\n  };\n\n\n  self.deleteDate = function(dateItem, index) {\n    $log.log(index);\n    scheduleService.deleteDate(dateItem).then(function(result) {\n      if (result) {\n        self.current.schedule.splice(index, 1);\n      }\n    });\n  };\n  self.deleteVehicle = function(carItem, index) {\n    vehicleService.deleteVehicle(carItem).then(function(result) {\n      if (result) {\n        self.current.vehicles.splice(index, 1);\n      }\n    });\n  };\n  self.getStat = function() {\n    encouragementService.getStat().then(function(data) {\n      self.stat = data;\n    });\n  };\n  self.getStat();\n\n  self.fixError = function() {\n    console.log('fired');\n    $location.hash(self.current.errorURL);\n    $anchorScroll();\n  };\n\n\n}]);\n","app.directive('gaugeChart', function() {\n  return {\n      replace: true,\n      templateUrl: '/static/js/directive/mileage-chart.html',\n      scope: {\n          data: '=?'\n      },\n      controller: ['$scope', function($scope) {\n        var self = this;\n\n        self.showHide = function() {\n          self.with = !self.with;\n        };\n        self.cost = $scope.data;\n\n      }],\n      controllerAs: 'vm',\n\n      link: function(scope, element, attrs, ctrl) {\n        var chart = c3.generate({\n            bindto: element[0].querySelector('.chart'),\n            data: {\n              columns: [\n                    ['data', 0]\n                ],\n                type: 'gauge',\n            },\n            gauge: {\n               label: {\n                   format: function(value, ratio) {\n                       return '$' + Math.round(value) + '/week';\n                   },\n                   min: 0,\n                   max: 50,\n                   unites: ' %'\n               },\n               max: 25,\n            },\n            tooltip: {\n              show: false\n            },\n            color: {\n                pattern: ['#FFF', '#FFF', '#FFF', '#FFF'], // the three color levels for the percentage values.\n                threshold: {\n                   unit: 'value', // percentage is default\n                   max: 50, // 100 is default\n                  values: [30, 60, 90, 100]\n                }\n            },\n        });\n\n        chart.load({\n            columns: [['data', 0]]\n        });\n\n\n        var chartData;\n        var dataIndex = 0;\n        function setData() {\n          if (!scope.data.cost) {\n            setTimeout(function() {\n              setData();\n            }, 500);\n          } else {\n            chartData = [scope.data.cost, scope.data.half_cost];\n            ctrl.cost = scope.data;\n            toggleChartData();\n          }\n        }\n        setData();\n\n        function toggleChartData() {\n          dataIndex = (dataIndex + 1) % chartData.length;\n          ctrl.showHide();\n          chart.load({\n              columns: [['data', chartData[dataIndex]]]\n          });\n          scope.$apply(function() {\n            setTimeout(toggleChartData, 3000);\n          });\n        }\n\n    }\n  };\n});\n","app.directive('googleplace', function() {\n    return {\n        require: 'ngModel',\n        scope: {\n            ngModel: '=',\n            details: '=?'\n        },\n        link: function(scope, element, attrs, model) {\n            var options = {\n                types: [],\n                componentRestrictions: {}\n            };\n            scope.gPlace = new google.maps.places.Autocomplete(element[0], options);\n\n            var addressValues = {\n              'street_number': 'street_number',\n              'route': 'street',\n              'locality': 'city',\n              'administrative_area_level_1': 'state',\n              'postal_code': 'zip_code'\n            };\n\n            google.maps.event.addListener(scope.gPlace, 'place_changed', function() {\n                scope.$apply(function() {\n                  console.log(scope.details);\n\n                    var addressObj = scope.gPlace.getPlace();\n                    model.$setViewValue(element.val());\n\n                    addressObj.address_components.forEach(function(address_comp){\n                      var type = address_comp.types[0];\n                      console.log(type);\n                      if (addressValues[type]) {\n                        var add_field = addressValues[type];\n                        scope.details[add_field] = address_comp.long_name;\n                        console.log(scope.details[add_field]);\n                      }\n                    });\n\n                    scope.details.latitude = addressObj.geometry.location.k;\n                    scope.details.longitude = addressObj.geometry.location.D;\n                    console.log(addressObj);\n                });\n            });\n        }\n    };\n});\n","app.directive('maps', function() {\n  return {\n      replace: true,\n      scope: {\n          // pickerType: '=?',\n          details: '=?'\n      },\n      controller: ['rideShareService', '$scope', function(rideShareService, $scope) {\n\n        rideShareService.getRideShares().then(function(result){\n          var rideShare = result;\n          MQA.withModule('new-route', function() {\n          // uses the MQA.TileMap.addRoute function to pass in an array\n          // of locations as part of the request parameter\n            $scope.map.addRoute({\n              request: {\n                locations: [\n                  { latLng: { lat: rideShare.driver.info.latitude, lng: rideShare.driver.info.longitude }},\n                  { latLng: { lat: rideShare.passenger.info.latitude, lng: rideShare.passenger.info.longitude }},\n                  { latLng: { lat: rideShare.passenger.work.latitude, lng: rideShare.passenger.work.longitude }},\n                  { latLng: { lat: rideShare.driver.work.latitude, lng: rideShare.driver.work.longitude }}\n                ]\n              }\n            });\n          });\n        });\n      }],\n      link: function(scope, element, attrs, model) {\n        //  create an object for options\n        var options = {\n          elt: element[0],           // ID of map element on page\n          zoom: 10,                                      // initial zoom level of the map\n          mtype: 'map',                                  // map type (map, sat, hyb); defaults to map\n          bestFitMargin: 0,                              // margin offset from map viewport when applying a bestfit on shapes\n          zoomOnDoubleClick: true,\n        };\n\n        // construct an instance of MQA.TileMap with the options object\n        scope.map = new MQA.TileMap(options);\n      }\n  };\n});\n","app.directive('mileageChart', function() {\n  return {\n      replace: true,\n      templateUrl: '/static/js/directive/mileage-chart.html',\n      scope: {\n          details: '=?'\n      },\n      controller: ['$scope', 'encouragementService', function($scope, encouragementService) {\n        var self = this;\n        encouragementService.getCost().then(function(result) {\n          self.cost = result.data;\n          self.cost.cost = self.cost.cost * 5;\n          self.cost.half_cost = self.cost.half_cost * 5;\n          $scope.showLevel(self.cost.cost, self.cost.half_cost);\n        });\n\n        self.with = false;\n\n        self.showHide = function() {\n          self.with = !self.with;\n        };\n\n      }],\n      controllerAs: 'vm',\n      link: function(scope, element, attrs, ctrl) {\n\n        var chart = c3.generate({\n            bindto: element[0].querySelector('.chart'),\n            data: {\n              columns: [\n                    ['data', 0]\n                ],\n                type: 'gauge',\n            },\n            gauge: {\n               label: {\n                   format: function(value, ratio) {\n                       return '$' + Math.floor(value) + '/week';\n                   },\n                   min: 0,\n                   max: 50,\n                   unites: ' %'\n               },\n               max: 25,\n            },\n            tooltip: {\n              show: false\n            },\n            color: {\n                pattern: ['#FFF', '#FFF', '#FFF', '#FFF'], // the three color levels for the percentage values.\n                threshold: {\n                   unit: 'value', // percentage is default\n                   max: 50, // 100 is default\n                  values: [30, 60, 90, 100]\n                }\n            },\n        });\n\n        // switch between values every 3 seconds\n        function showLevel(cost, halfCost) {\n          scope.$apply(function () {\n            console.log('TOGGLING');\n            ctrl.showHide();\n            chart.load({\n              columns: [['data', cost]]\n            });\n          });\n\n          setTimeout(function () {\n            scope.$apply(function () {\n              ctrl.showHide();\n              chart.load({\n                columns: [['data', halfCost]]\n              });\n              setTimeout(function() {\n                showLevel(cost, halfCost);\n              }, 5000);\n            });\n          }, 5000);\n        }\n        scope.showLevel = showLevel;\n      }\n  };\n});\n","app.directive('picker', function() {\n  return {\n      scope: {\n          pickerType: '=?',\n          details: '=?',\n      },\n      link: function(scope, element, attrs, model) {\n        if(scope.pickerType==='date'){\n          $(element).pickadate({\n            // container: '#root-picker-outlet',\n            formatSubmit: 'yyyy/mm/dd',\n            onSet: function(submit) {\n              scope.details = new Date( submit.select );\n            },\n            disable: [{\n              from: new Date(1962-07-07),\n              to: new Date()\n            }]\n          });\n        } else if (scope.pickerType==='time') {\n          $(element).pickatime({\n            // container: '#root-picker-outlet',\n            onSet: function(time) {\n              console.log('set time');\n              scope.details = time.select;\n            }\n          });\n        }\n      }\n  };\n});\n","app.config(['$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {\n  var routeOptions = {\n    templateUrl: '/static/js/home/home.html',\n    controller: 'HomeCtrl',\n    controllerAs: 'vm',\n  };\n  $routeProvider.when('/', routeOptions);\n\n}]).controller('HomeCtrl', ['$log', '$location', 'current', 'Work', '$anchorScroll', function($log, $location, current, Work, $anchorScroll){\n  var self = this;\n  current.page = '/';\n  self.current = current;\n  self.newWork = Work();\n\n  self.register = function() {\n    self.current.work = self.newWork;\n    $location.path('/facebook/login');\n  };\n\n  self.showInfo = function(info) {\n\n    $('.home-page-wrapper').animate({\n      scrollTop: $('#' + info).offset().top\n    }, 500);\n    \n  };\n}]);\n","app.directive('footerNav', function() {\n\n  return {\n\n    replace: true,\n\n    scope: {\n      onclose: '='\n    },\n\n    templateUrl: '/static/js/nav/footer-nav.html',\n\n    controller: ['$location', 'StringUtil', '$log', 'current', '$scope', '$rootScope', 'userService',\n    function($location, StringUtil, $log, current, $scope, $rootScope, userService) {\n      var self = this;\n      self.current = current;\n\n      self.logout = function() {\n        userService.logout().then(function () {\n          $location.path('/');\n        });\n      };\n\n      $rootScope.$on('$routeChangeSuccess', function() {\n        self.page = $location.path();\n        // if (self.page === '/register') {\n        //   $('body').css('background-color', '#8C3A37');\n        // } else if(self.page === '/dashboard') {\n        //   $('body').css('background-color', '#83A9AE');\n        // } else if(self.page === '/') {\n        //   $('body').css('background-color', '#627F83');\n        // }\n      });\n\n      self.isActive = function (path) {\n        // The default route is a special case.\n        if (path === '/') {\n          return $location.path() === '/';\n        }\n        return StringUtil.startsWith($location.path(), path);\n      };\n\n      self.goTo = function(elem) {\n        $location.hash(elem);\n        $anchorScroll();\n      };\n\n    }],\n\n    controllerAs: 'vm',\n\n    link: function ($scope, element, attrs, ctrl) {\n\n    }\n  };\n\n\n\n});\n","app.directive('mainNav', function() {\n\n  return {\n\n    replace: true,\n\n    scope: {\n      onclose: '='\n    },\n\n    templateUrl: '/static/js/nav/main-nav.html',\n\n    controller: ['$location', 'StringUtil', '$log', 'current', '$scope', '$rootScope', 'userService',\n    function($location, StringUtil, $log, current, $scope, $rootScope, userService) {\n      var self = this;\n      self.current = current;\n\n      // if(!self.current.user.name) {\n      //   $location.path('/');\n      // }\n\n      self.logout = function() {\n        userService.logout().then(function () {\n          $location.path('/');\n        });\n      };\n\n      $rootScope.$on('$routeChangeSuccess', function() {\n        self.page = $location.path();\n        // if (self.page === '/register') {\n        //   $('body').css('background-color', '#8C3A37');\n        // } else if(self.page === '/dashboard') {\n        //   $('body').css('background-color', '#83A9AE');\n        // } else if(self.page === '/') {\n        //   $('body').css('background-color', '#627F83');\n        // }\n      });\n\n      self.isActive = function (path) {\n        // The default route is a special case.\n        if (path === '/') {\n          return $location.path() === '/';\n        }\n        return StringUtil.startsWith($location.path(), path);\n      };\n\n      self.goTo = function(elem) {\n        $location.hash(elem);\n        $anchorScroll();\n      };\n\n    }],\n\n    controllerAs: 'vm',\n\n    link: function ($scope, element, attrs, ctrl) {\n\n      $(document).ready(function(){\n        $('.js-menu-trigger, .js-menu-screen').on('click touchstart', function (e) {\n          $('.js-menu,.js-menu-screen').toggleClass('is-visible');\n          e.preventDefault();\n        });\n      });\n    }\n  };\n\n\n\n});\n","app.config(['$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {\n  var routeOptions = {\n    templateUrl: '/static/js/profile/profile.html',\n    controller: 'profileCtrl',\n    controllerAs: 'vm'\n  };\n  $routeProvider.when('/profile', routeOptions);\n\n}]).controller('profileCtrl', ['$log', '$location', 'current', 'userService', 'workService', 'vehicleService', 'scheduleService', 'rideShareService',\n      function($log, $location, current, userService, workService, vehicleService, scheduleService, rideShareService){\n\n  var self = this;\n  self.current = current;\n  if (current.name) {\n    $locaton.path('/');\n  }\n\n  // self.getRideShares = function() {\n  //   rideShareService.getRideShares().then(function(result) {\n  //     self.rideShare = result;\n  //   });\n  // };\n  // self.getRideShares();\n  //\n  // self.rideShareRes = function(res) {\n  //   var response = {\n  //     response: res\n  //   };\n  //   self.rideShare.you.accepted = res;\n  //   rideShareService.respond(response);\n  //   rideShareService.process();\n  //   self.getRideShares();\n  // };\n\n  self.goTo = function(url) {\n    $location.path(url);\n  };\n  self.deleteDate = function(dateItem, index) {\n    $log.log(index);\n    scheduleService.deleteDate(dateItem).then(function(result) {\n      if (result) {\n        self.current.schedule.splice(index, 1);\n      }\n    });\n  };\n  self.editWork = function() {\n\n  };\n  self.editVehicle = function() {\n\n  };\n  self.deleteWork = function(workItem, index) {\n    // IMPLEMENT 'are you sure?' if there are dates associated with this job\n    workService.deleteWork(workItem).then(function(result) {\n      if (result) {\n        self.current.work.splice(index, 1);\n      }\n      current.getSchedule();\n    });\n  };\n  self.deleteVehicle = function(carItem, index) {\n    vehicleService.deleteVehicle(carItem).then(function(result) {\n      if (result) {\n        self.current.vehicles.splice(index, 1);\n      }\n    });\n  };\n\n}]);\n","app.config(['$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {\n  var routeOptions = {\n    templateUrl: '/static/js/register/register.html',\n    controller: 'registerCtrl',\n    controllerAs: 'vm'\n  };\n  $routeProvider.when('/register', routeOptions);\n\n}]).controller('registerCtrl', ['$log', '$location', 'current', 'Work', 'Schedule', 'userService', 'workService', 'scheduleService', 'Vehicle', 'vehicleService', '$timeout',\n                        function($log, $location, current, Work, Schedule, userService, workService, scheduleService, Vehicle, vehicleService, $timeout){\n\n  var self = this;\n  current.page = $location.path();\n  self.current = current;\n  self.newWork = Work();\n  self.vehicle = Vehicle();\n  self.weekdays = ['mon', 'tues', 'wed', 'thurs', 'fri', 'sat', 'sun'];\n  self.show = 'register';\n\n  self.editUser = function() {\n    userService.editUser(self.current.user).then(function(data) {\n      self.show = 'work';\n      console.log(self.newWork);\n    });\n  };\n\n  self.addWorkFields = function() {\n    self.addWork();\n    $timeout(function() {\n      self.addSchedule();\n    }, 50);\n  };\n\n  self.addWork = function() {\n    self.newWork.user_id = self.current.user.id;\n    delete self.newWork.address;\n    workService.addWork(self.newWork, current.user).then(function(results) {\n      self.show = 'vehicle';\n      self.newWork = results.data.work;\n      console.log(self.newWork);\n    });\n    return self.newWork;\n  };\n\n  self.addSchedule = function() {\n    self.schedule.work_id = self.newWork.id;\n    var scheduleToSubmit = Schedule(self.schedule);\n    try {\n      scheduleService.addDates(scheduleToSubmit);\n      current.getSchedule();\n    } catch(e) {\n      $log.log(e);\n    }\n  };\n\n  self.addVehicle = function() {\n    vehicleService.addVehicle(self.vehicle).then(function(data) {\n      self.current.vehicles.push(self.vehicle);\n      current.getStatus();\n      self.editUser();\n      $location.path('/dashboard');\n    });\n  };\n\n  self.signup = function() {\n    userService.addUser().then(function() {\n\n    });\n  };\n\n  self.fbRegister = function() {\n    $location.path('/facebook/login');\n  };\n\n}]);\n","app.config(['$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {\n  var routeOptions = {\n    templateUrl: '/static/js/rideshare/rideshare.html',\n    controller: 'rideCtrl',\n    controllerAs: 'vm'\n  };\n  $routeProvider.when('/rideshare', routeOptions);\n\n}]).controller('rideCtrl', ['$log', '$location', 'current', 'rideShareService',\n      function($log, $location, current, rideShareService){\n\n  var self = this;\n\n  rideShareService.getRideShares().then(function(result) {\n    $log.log(result);\n  });\n\n}]);\n","app.factory('ajaxService', ['$log', function($log) {\n\n  return {\n    call: function(p) {\n      return p.then(function (result) {\n        return result;\n      })\n      .catch(function (error) {\n        $log.log(error);\n      });\n    }\n  };\n\n}]);\n","// A little string utility... no biggie\napp.factory('StringUtil', function() {\n  return {\n    startsWith: function (str, subStr) {\n      str = str || '';\n      return str.slice(0, subStr.length) === subStr;\n    }\n  };\n});\n","app.factory('encouragementService', ['ajaxService', '$http', 'current', '$q', function(ajaxService, $http, current, $q) {\n\n  var stats = [\n    'In some cities there are HOV (High Occupancy Vehicle) lanes, which are meant to be used only by those who are carpooling and are designed to make your commute time faster.Taking the HOV lane can cut your commute time down by as much as half.',\n    'An average American spends 40 hours each year stuck in traffic... Wouldn\\'t it be nice to share the ride?',\n    'About 51% of the people who carpoolers are in the same family and 40% of people carpool with their apartment or flat mates.',\n    'As much as 77% of carpoolers ride with just one other person.',\n    'The average carpooler can cut out as much as $600 each month on the cost of their commuting drive.',\n    'About 78% Americans drive to work without carpooling at all, which is part of a peculiar two decade-long decrease in carpooling.',\n    'The EO in RidEO is an irregular latin verb meaning- \"To Go\"',\n    'By carpooling just twice a week, 1,600 pounds of greenhouse gases can be kept out of the air each year.',\n    'If 100 people were to take advantage of the carpool option every day, more than of 1,320 pounds of carbon monoxide and 2,376,000 pounds of carbon dioxide could be removed from the air.',\n    'About 18% of a person’s monthly budget it taken up in car maintenance, repairs, and gas.',\n    'If you add at least one carpooler whom you split costs with, it may add 5-10 minutes onto your drive time but will reduce your bills and expenses by half; adding more people means even more savings.',\n    'Carpooling means fewer cars on the road each day which means less oil usage, and this can help reduce the nation’s dependency on foreign oil.',\n    'If everyone opted to carpool just one day a week, the traffic on the nation’s major highways and roads would be reduced by as much as 20%.',\n    'Total percent of people who carpool with a family member - 51%',\n    'Percent of people who carpool with someone that they live with  - 40%',\n    'Percent of Americans who carpool - 10%',\n    'Percent of people who carpool with just 1 other person - 77.3%',\n    'Percent of Americans who drive to work solo - 78%',\n    'Percent of traffic that would die down if everyone carpooled once a week - 20%',\n    'Total amount of gas saved yearly by carpooling - 85 million gallons',\n    'Total amount of miles avoided traffic every year by carpooling - 56,000 miles',\n    'Total amount of money saved by carpooling every year - $1.1 billion'\n  ];\n\n  return {\n\n    getCost: function() {\n      return ajaxService.call($http.get('/api/v1/cost'));\n    },\n    getStat: function() {\n      // return ajaxService.call($http.get('/api/v1/user/carpool'));\n      var length = stats.length;\n      var statIndex = Math.floor(Math.random() * length);\n      return $q(function(resolve, reject) {\n          resolve(stats[statIndex]);\n      });\n    }\n  };\n\n}]);\n","app.factory('workDate', [ function(){\n\n  return function (spec) {\n    spec = spec || {};\n    return {\n      user_id: spec.user_id || undefined,\n      work_id: spec.work_id || undefined,\n      arrival_datetime: spec.arrival_datetime || undefined,\n      departure_datetime: spec.departure_datetime || undefined\n    };\n  };\n}]);\n","app.factory('Schedule', ['workDate','$log', 'current', function(workDate, $log, current){\n\n  return function (spec) {\n    var today = new Date();\n    var dateOffset = 7 - today.getDay();\n    var week = [];\n    var weekdays = ['mon', 'tues', 'wed', 'thurs', 'fri', 'sat', 'sun'];\n\n    var fromIndex = weekdays.indexOf(spec.from) || 0;\n    var toIndex = weekdays.indexOf(spec.to) || weekdays.length - 1;\n\n    weekdays = weekdays.slice(fromIndex, toIndex + 1);\n    weekdays.forEach(function(day, index) {\n      var weekDate = today.getDate() + dateOffset + index;\n      var departDate = new Date();\n      var arriveDate = new Date();\n      departDate.setUTCDate(weekDate);\n      arriveDate.setUTCDate(weekDate);\n      departDate.setHours(Math.floor(spec.depart_time / 60), spec.depart_time % 60, 0, 0);\n      arriveDate.setHours(Math.floor(spec.arrive_time / 60), spec.arrive_time % 60, 0, 0);\n      week.push(workDate({\n        user_id: current.user.id,\n        work_id: spec.work_id,\n        arrival_datetime: arriveDate.toISOString(),\n        departure_datetime: departDate.toISOString()\n      }));\n    });\n\n    return week;\n  };\n}]);\n","app.factory('User', [function(){\n\n  return function (spec) {\n    spec = spec || {};\n    return {\n      name: spec.name || '',\n      email: spec.email || '',\n      paypal_id: spec.paypal || '',\n      id: spec.id || '',\n      address: spec.address || '',\n      street_number: spec.street_number || '',\n      street: spec.street || '',\n      city: spec.city || '',\n      state: spec.state || '',\n      zip_code: spec.zip || '',\n      latitude: spec.lat || '',\n      longitude: spec.long || ''\n    };\n  };\n}]);\n","app.factory('Vehicle', [function(){\n\n  return function (spec) {\n    spec = spec || {};\n    return {\n      make: spec.make || '',\n      model: spec.model || '',\n      year: spec.year || ''\n    };\n  };\n}]);\n","app.factory('Work', [function(){\n\n  return function (spec) {\n    spec = spec || {};\n    return {\n      name: spec.name || '',\n      user_id: spec.user_id || '',\n      // address: spec.street_address || '',\n      street_number: spec.street_number || '',\n      street: spec.street || '',\n      city: spec.city || '',\n      state: spec.state || '',\n      zip_code: spec.zip || undefined,\n      latitude: spec.lat || '',\n      longitude: spec.long || ''\n    };\n  };\n\n}]);\n","app.factory('current', ['User', 'userService','$log', 'Work', 'workService', 'vehicleService', 'scheduleService', '$q', 'rideShareService',\n                        function(User, userService, $log, Work, workService, vehicleService, scheduleService, $q, rideShareService) {\n  // create basic object\n  currentSpec = {\n    getWork: function() {\n      return workService.getWork(currentSpec.user.id).then(function(result) {\n        currentSpec.work = result.data.work;\n        currentSpec.work.forEach(function(work, index) {\n          if(result.data.work[index].street_number){\n            work.address = result.data.work[index].street_number + ' ' + result.data.work[index].street + ' ' + result.data.work[index].city + ' ' + result.data.work[index].state + ' ' + result.data.work[index].zip_code;\n          }\n        });\n          // currentSpec.work[0].address = undefined;\n        if(currentSpec.work.length <= 0) {\n          currentSpec.incomplete = true;\n          currentSpec.errorMsg = 'You don\\'t have a workplace. Please add one.';\n          currentSpec.errorURL = 'profile';\n        }\n      });\n    },\n    getVehicles: function() {\n      try {\n        return vehicleService.getVehicles().then(function(result) {\n          currentSpec.vehicles = result.data.vehicles;\n          if(currentSpec.vehicles.length <= 0) {\n            currentSpec.incomplete = true;\n            currentSpec.errorMsg = 'You don\\'t have a vehicle. Please add one.';\n            currentSpec.errorURL = 'profile';\n          }\n        });\n      } catch(e) {\n        $log.log(e);\n      }\n    },\n    getSchedule: function() {\n      currentSpec.loading = false;\n      return scheduleService.getSchedule().then(function(result) {\n        currentSpec.schedule = result.data.calendars;\n        if(currentSpec.schedule.length <= 0) {\n          currentSpec.incomplete = true;\n          currentSpec.errorMsg = 'You don\\'t have any dates on the calendar. Please add one.';\n          currentSpec.errorURL = 'dates';\n        } else {\n          currentSpec.schedule = scheduleService.processDates(currentSpec.schedule);\n        }\n      });\n    },\n    getRideShares: function() {\n      return rideShareService.getRideShares().then(function(result) {\n        currentSpec.rideShares = result;\n      });\n    },\n    getStatus: function() {\n      return $q.all([\n        currentSpec.getWork(),\n        currentSpec.getVehicles(),\n        currentSpec.getSchedule()]);\n    },\n    vehicles: [],\n    work: [],\n    schedule: []\n  };\n\n  currentSpec.user = User();\n  currentSpec.loading = true;\n\n  // Get our current User and if one exists, populate the user object data\n  userService.getCurrent().then(function(result) {\n    if (result.status === 200){\n      currentSpec.user = result.data.user;\n      currentSpec.user.address = result.data.user.street_number + ' ' + result.data.user.street + ' ' + result.data.user.city + ' ' + result.data.user.state + ' ' + result.data.user.zip_code;\n      userService.getPhoto().then(function(result){\n        currentSpec.photo = result.data;\n      });\n      currentSpec.getStatus().then(function(data) {\n        currentSpec.loading = false;\n      });\n    } else {\n      $log.log('sorry bra, no user');\n    }\n  });\n\n  return currentSpec;\n\n}]);\n","app.factory('scheduleService', ['ajaxService', '$http', 'workDate', function(ajaxService, $http, workDate) {\n\n  return {\n\n    addDate: function(date) {\n      return ajaxService.call($http.post('/api/v1/user/calendar', date));\n    },\n    addDates: function(dates) {\n        dates.forEach(function(date) {\n          console.log(date);\n          ajaxService.call($http.post('/api/v1/user/calendar', date));\n        });\n    },\n    editDate: function(date) {\n      ajaxService.call($http.put('/api/v1/user/calendar', date));\n    },\n\n    getSchedule: function(userId) {\n        return ajaxService.call($http.get('api/v1/user/calendar'));\n    },\n    deleteDate: function(date) {\n        return ajaxService.call($http.delete('api/v1/user/calendar/' + date.id));\n    },\n    processDates: function(dates) {\n      dates.forEach(function(date){\n        date.arrive = new Date(date.arrival_datetime);\n        date.depart = new Date(date.departure_datetime);\n      });\n      return dates;\n    }\n\n  };\n\n}]);\n","app.factory('userService', ['ajaxService', '$http', '$q', function(ajaxService, $http, $q) {\n\n  return {\n\n    addUser: function(user) {\n        return ajaxService.call($http.post('/api/v1/user', user));\n    },\n\n    editUser: function(user) {\n      return ajaxService.call($http.put('/api/v1/user', user));\n    },\n\n    getCurrent: function() {\n      return ajaxService.call($http.get('/api/v1/me'));\n    },\n\n    getPhoto: function() {\n      return ajaxService.call($http.get('/facebook/photo'));\n    },\n\n    getUserPhoto: function(facebookID) {\n      return ajaxService.call($http.get('/facebook/photo/' + facebookID));\n    },\n\n    logout: function() {\n      return ajaxService.call($http.get('/api/v1/logout'));\n    }\n\n  };\n\n\n\n}]);\n","app.factory('vehicleService', ['ajaxService', 'Vehicle', '$http', '$q', function(ajaxService, Vehicle, $http, $q) {\n\n  return {\n\n    addVehicle: function(car) {\n        return ajaxService.call($http.post('/api/v1/user/vehicle', car));\n    },\n\n    getVehicles: function() {\n        return ajaxService.call($http.get('/api/v1/user/vehicle')).then(function(result) {\n          return $q(function(resolve, reject) {\n            if(result.data.vehicles.length === 0) {\n              result.data.vehicles.push(Vehicle());\n              console.log(result);\n              resolve(result);\n            } else {\n              resolve(result);\n            }\n          });\n        });\n    },\n    deleteVehicle: function(car) {\n        return ajaxService.call($http.delete('/api/v1/user/vehicle/' + car.id));\n    }\n\n  };\n\n\n\n}]);\n","app.factory('workService', ['ajaxService', '$http', function(ajaxService, $http) {\n\n  return {\n\n    addWork: function(work, user) {\n        return ajaxService.call($http.post('/api/v1/users/' + user.id + '/work', work));\n    },\n    editWork: function(work, userId) {\n        return ajaxService.call($http.put('/api/v1/user/' + userId, work));\n    },\n    getWork: function(userId) {\n        return ajaxService.call($http.get('api/v1/users/work'));\n    },\n    deleteWork: function(work) {\n        return ajaxService.call($http.delete('api/v1/user/work/' + work.id));\n    }\n  };\n\n}]);\n","app.factory('rideShareService', ['ajaxService', '$http', '$q', function(ajaxService, $http, $q) {\n  var rideShare;\n\n  var self = {\n    getRideShares: function() {\n      if (rideShare !== undefined) {\n        return $q(function(resolve) {\n          resolve(rideShare);\n        });\n      }\n      return ajaxService.call($http.get('/api/v1/user/carpool')).then(function(results) {\n        rideShare = results.data.carpool;\n        self.process();\n        return $q(function(resolve, reject) {\n          resolve(results.data.carpool);\n        });\n      });\n    },\n    respond: function(res) {\n        res.carpool_id = rideShare.carpool_id;\n        return ajaxService.call($http.post('/api/v1/user/carpool', res));\n    },\n    process: function() {\n      // are we passenger or driver?\n      self.getStatus();\n      if (rideShare.driver.info.id === currentSpec.user.id){\n        rideShare.role = 'driver';\n        rideShare.you = self.isConfirmed(rideShare.driver);\n        rideShare.rideo = self.isConfirmed(rideShare.passenger);\n      } else {\n        rideShare.role = 'passenger';\n        rideShare.you = self.isConfirmed(rideShare.passenger);\n        rideShare.rideo = self.isConfirmed(rideShare.driver);\n      }\n      return $q(function(resolve,reject) {\n        resolve(rideShare);\n      });\n    },\n\n    isConfirmed: function(person) {\n      if (person.accepted === true) {\n        person.status = 'confirmed';\n      } else if (person.accepted === false) {\n        person.status = 'declined';\n      } else {\n        person.status = 'unconfirmed';\n      }\n      return person;\n    },\n\n    getStatus: function() {\n      if (rideShare.driver.accepted === true && rideShare.passenger.accepted === true) {\n        rideShare.status = 'confirmed';\n      } else if (rideShare.driver.accepted === false && rideShare.passenger.accepted === false) {\n        rideShare.status = 'declined';\n      } else {\n        rideShare.status = 'pending';\n      }\n      return $q(function(resolve, reject) {\n        resolve(rideShare);\n      });\n    },\n    getCost: function() {\n      return ajaxService.call($http.get('/api/v1/'+ rideShare.carpool_id +'/carpool_cost')).then(function(results) {\n        return $q(function(resolve, reject){\n          resolve( rideShare.cost = results.data );\n        });\n      });\n    },\n    getSingleCost: function() {\n      return ajaxService.call($http.get('/api/v1/cost'));\n    }\n  };\n  return self;\n\n\n}]);\n"],"sourceRoot":"/source/"}